# If you're installing onto a new machine, do these things
# manually first:
# - Authenticate to Google with GMVault
# - Mount the external drive (and reflect those paths in the vars below)
# - Make sure the target borg repository is initiatlized

# TODO
# - Test this fully with Vagrant or something
# - Add rclone or equivalent
# - Mirror to AWS
# - Run borg check sometimes
# - Security: logwatch, 5minutes, etc?

- name: "Backup host setup"
  hosts: home
  vars:
    emails:
      - "example@example.com"
    github_users:
      - "natanlao"
    github_token: "abcdef123456"  # give `repo` permission
    # No trailing slash in paths
    disk_root: "/media/disk"
    install_root: "{{ ansible_env.HOME }}/.internal"
    backup_root: "{{ disk_root }}/Backups"
    gmvault: "{{ install_root }}/venv/bin/gmvault"
    github_backup: "{{ install_root }}/venv/bin/github-backup"
    BORG_PASSPHRASE: "passphrase"
    BORG_REPO: "ssh://example.com/./example"

  tasks:
    - name: "Install gmvault"
      pip:
        name: gmvault
        virtualenv: "{{ install_root }}/venv"
        state: present

    - name: "Install github-backup"
      pip:
        name: github-backup
        virtualenv: "{{ install_root }}/venv"
        state: present

    - name: "Install borgbackup"
      apt:
        name: borgbackup
        state: present
        update_cache: yes

    # All of the data GMVault backs up will then be backed up by Borg
    # As Borg uses compression and deduplication, we don't want the emails to be compressed or encrypted
    # before Borg gets to them. (The final backup will be encrypted and compressed.)
    - name: "Bi-hourly gmvault quick sync"
      cron:
        minute: "15,45"
        job: "{{ gmvault }} sync --type quick --check-db no --no-compression -d {{ backup_root }}/{{ item }}/mail {{ item }} > /dev/null"
      with_items: "{{ emails }}"

    - name: "Weekly gmvault full sync"
      cron:
        minute: "50"
        hour: "4"
        day: "2"
        job: "{{ gmvault }} sync --type full --check-db no --no-compression -d {{ backup_root }}/{{ item }}/mail {{ item }} > /dev/null"
      with_items: "{{ emails }}"

    - name: "Daily GitHub backup"
      cron:
        minute: "0"
        hour: "3"
        job: "{{ github_backup }} -o '{{ backup_root}}/{{ item }}@github.com/' -i --all --gists -t {{ github_token }} {{ item }}"
      with_items: "{{ github_users }}"

    - name: "Create borg backup script"
      template:
        src: borg.sh
        dest: "{{ install_root }}/borg.sh"

    - name: "Daily Borg backup"
      cron:
        hour: "5"
        minute: "20"
        job: "{{ install_root }}/borg.sh > /dev/null"

